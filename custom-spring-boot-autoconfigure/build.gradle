buildscript {

    ext.springReleaseTrain = 'Finchley.RC2'
    ext.kotlinVersion = '1.2.41'
    ext.springBootVersion = '2.0.3.RELEASE'
    ext.swaggerVersion = '2.8.0'
//    ext.asciiDoctorVersion = '1.5.3'

    repositories {
        mavenCentral()
//        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
//        classpath "org.asciidoctor:asciidoctor-gradle-plugin:$asciiDoctorVersion"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin-spring'
//apply plugin: 'org.asciidoctor.convert'

apply plugin: 'java-library'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/libs-milestone' }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springReleaseTrain"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin'

    annotationProcessor "org.springframework.boot:spring-boot-autoconfigure-processor"

    compile "org.springframework.boot:spring-boot-autoconfigure"

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'

    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'



    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

//asciidoctor {
//    sourceDir 'src/main/docs'
//    attributes \
//        'snippets': file('build/generated-snippets')
//}
//
//bootJar {
//    dependsOn asciidoctor
//    from ("${asciidoctor.outputDir}/html5") {
//        into 'public/docs'
//    }
//}
